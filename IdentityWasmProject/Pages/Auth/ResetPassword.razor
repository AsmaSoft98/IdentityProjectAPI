@page "/auth/resetpassword"
@layout AuthLayout
<br />
<EditForm Model="_model" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h4" GutterBottom="true" Class="mt-4">Change password?</MudText>
                 <MudText>Don't have an account? <MudLink Href="/auth/register">Sign Up</MudLink></MudText>
                  <MudText>have an account? <MudLink Href="/auth/login">Sign In</MudLink></MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            @if (!string.IsNullOrWhiteSpace(_errorMessage))
            {
              <MudAlert Style="max-width: 500px; align-items: baseline;"
                     NoIcon="false" Severity="Severity.Error" Variant="Variant.Filled" 
                     ShowCloseIcon="true" CloseIconClicked="(() => HideError())"Class="mt-4">
                     <MudText Typo="@Typo.body1">@_errorMessage</MudText>
              </MudAlert>
	        }
            <MudTextField Label="E-mail" HelperText="required" @bind-Value="@_model.Email" Required="true"  Variant="Variant.Outlined" Class="my-6"></MudTextField>
            <MudTextField Label="Old Password" InputType="InputType.Password" HelperText="required" @bind-Value="@_model.CurrentPassword" />
            <MudTextField InputType="@PasswordInput" Label="Password" HelperText="Required" @bind-Value="@_model.NewPassword" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />
            <MudTextField InputType="@PasswordInput" Label="Confirm Password" HelperText="Required" @bind-Value="@_model.ConfirmNewPassword" Adornment="Adornment.End" />
            <ValidationSummary />
        </MudCardContent>
        <MudCardActions>
            <MudButton FullWidth="true" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Error" Class="mx-auto" Disabled="_isBusy" OnClick="() => HandleSubmit()">Change Password</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {
    private void NavigateToRegisterComponent() { _navigationManager.NavigateTo("/register"); }
    private void NavigateToForgotPasswordComponent() { _navigationManager.NavigateTo("/forgotPassword"); }

    string Password { get; set; } = "";

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;

    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}
